{"version":3,"file":"static/js/467.f64836d4.chunk.js","mappings":"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","sources":["pages/Login/index.js","store/actions/auth/SoicalLogin.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ReactComponent as Logo } from \"../../assets/images/Logo.svg\";\r\nimport {\r\n  // Button,\r\n  ButtonBar,\r\n  CheckBox,\r\n  Container,\r\n  CustomLink,\r\n  Divider,\r\n  // Image,\r\n  InputGroup,\r\n  LogoContainer,\r\n  Page,\r\n  Paragraph,\r\n  Title,\r\n} from \"../../components/common\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  appleImg,\r\n  emailImg,\r\n  facebookImg,\r\n  googleImg,\r\n  passwordImg,\r\n} from \"../../assets/images\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login, resetPassword } from \"../../store/actions/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { gapi } from \"gapi-script\";\r\nimport FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\r\nimport postgoogleLogin from \"../../api/postgoogleLogin\";\r\nimport postfacebookLogin from \"../../api/postfacebookLogin\";\r\nimport { postLogin, postResetPassword } from \"../../api\";\r\nimport SocialLogin from \"../../store/actions/auth/SoicalLogin\";\r\nimport {\r\n  passwordReseted,\r\n  requestResetPassword,\r\n  setResetPasswordError,\r\n} from \"../../store/slice/mainSlice\";\r\nimport AppleSignin from \"react-apple-signin-auth\";\r\nimport { useLoginWithAppleMutation } from \"../../store/slice/api\";\r\nimport { useGoogleLogin } from \"@react-oauth/google\";\r\n\r\nconst Image = styled.img`\r\n  /* @media (max-width: 900px) {\r\n    width: 20px;\r\n  } */\r\n`;\r\nconst Button = styled.button`\r\n  width: ${(props) => props.width ?? \"154px\"};\r\n  height: ${(props) => props.height ?? \"60px\"};\r\n  background: ${(props) => props.color};\r\n  border-radius: ${(props) => props.borderRadius ?? \"5px\"};\r\n  ${(props) => props.border && \"border: 1px solid #000000;\"}\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  color: ${(props) => props.textColor ?? \"#ffffff\"};\r\n  border: 1px solid rgba(0, 0, 0, 0.05);\r\n\r\n  font-family: \"TT Commons\";\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n\r\n  margin: ${(props) => props.margin ?? \"8px\"};\r\n\r\n  cursor: pointer;\r\n\r\n  @media (max-width: 1200px) {\r\n    width: 150px;\r\n    height: 50px;\r\n    font-size: 17px;\r\n  }\r\n  @media (max-width: 900px) {\r\n    width: 120px;\r\n    height: 45px;\r\n    font-size: 15px;\r\n  }\r\n  @media (max-width: 600px) {\r\n    width: 90px;\r\n    height: 40px;\r\n    font-size: 12px;\r\n    margin: 0 4px;\r\n  }\r\n  @media (max-width: 375px) {\r\n    width: 85px;\r\n    height: 37px;\r\n    font-size: 11px;\r\n  }\r\n`;\r\nexport default function Login() {\r\n  const [error, seterror] = useState([]);\r\n  const [validateEmail, setValidateEmail] = useState(false);\r\n\r\n  const [loginWithApple] = useLoginWithAppleMutation();\r\n  const navigate = useNavigate();\r\n\r\n  // useEffect(() => {\r\n  //   function start() {\r\n  //     gapi.client.init({\r\n  //       clientId: '920161152373-u95bboqe5r1m45b5654gdgidipfete75.apps.googleusercontent.com',\r\n  //       scope: 'email',\r\n  //     });\r\n  //   }\r\n  //   gapi.load('client:auth2', start);\r\n\r\n  // }, [])\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [remember, setRemember] = useState(false);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    postLogin(email, password)\r\n      .then((response) => {\r\n        navigate(\"/2fa\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error: \", error);\r\n        seterror(error.response.data);\r\n      });\r\n  };\r\n\r\n  const handleForgotPassword = async () => {\r\n    navigate(\"/send-email\");\r\n  };\r\n\r\n  const HandleSucsess = (googledata) => {\r\n    postgoogleLogin(googledata.access_token)\r\n      .then((response) => {\r\n        dispatch(\r\n          SocialLogin({\r\n            user: {\r\n              ...googledata.profileObj,\r\n              key: response.token,\r\n            },\r\n          })\r\n        );\r\n        navigate(\"/home\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"err\", err);\r\n        alert(\r\n          err.response\r\n            ? err.response.data\r\n              ? err.response.data.non_field_errors ??\r\n                JSON.stringify(err.response.data)\r\n              : JSON.stringify(err.response)\r\n            : err.message\r\n        );\r\n      });\r\n  };\r\n\r\n  // const loginWithGoogle = useGoogleLogin({\r\n  //   onSuccess: (tokenResponse) => HandleSucsess(tokenResponse),\r\n  //   onError: (err) => {\r\n  //     HandleFailure(err);\r\n  //   },\r\n  // });\r\n\r\n  const HandleFailure = (googleres) => {\r\n    console.log(\"ERROR::\", googleres);\r\n  };\r\n\r\n  const HandleFacbookLogin = (facebookdata) => {\r\n    // console.log('facebookdata...', facebookdata);\r\n    if (facebookdata.status === \"unknown\" || facebookdata.error) return;\r\n    postfacebookLogin(facebookdata.accessToken, facebookdata.id)\r\n      .then((response) => {\r\n        dispatch(\r\n          SocialLogin({\r\n            user: {\r\n              ...response.user,\r\n              key: response.token,\r\n            },\r\n          })\r\n        );\r\n        navigate(\"/home\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\r\n          err.response\r\n            ? err.response.data\r\n              ? err.response.data.non_field_errors ??\r\n                JSON.stringify(err.response.data)\r\n              : JSON.stringify(err.response)\r\n            : err.message\r\n        );\r\n      });\r\n  };\r\n\r\n  const HandleAppleLogin = ({ authorization: { code, id_token } }) => {\r\n    loginWithApple({ access_token: code, id_token })\r\n      .unwrap()\r\n      .then((res) => {\r\n        console.log(\"loginWithAppleRes...\", res);\r\n        dispatch(\r\n          SocialLogin({\r\n            user: {\r\n              ...res.user,\r\n              key: res.token,\r\n            },\r\n          })\r\n        );\r\n        navigate(\"/home\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\r\n          err.data\r\n            ? err.data.non_field_errors\r\n              ? JSON.stringify(err.data.non_field_errors)\r\n              : JSON.stringify(err.data)\r\n            : \"Some error occurred\"\r\n        );\r\n      });\r\n  };\r\n\r\n  const loggedIn = useSelector(\r\n    (state) => state.reducer.auth && state.reducer.auth.loggedIn\r\n  );\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      navigate(\"/home\");\r\n    }\r\n  }, [loggedIn, navigate]);\r\n\r\n  return (\r\n    <Page>\r\n      <Container margin=\"100px auto\" padding=\"70px\" borderRadius=\"20px\">\r\n        <Title margin=\"30px\">Log In</Title>\r\n        <form\r\n          onSubmit={onSubmit}\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <InputGroup\r\n            label=\"Email\"\r\n            placeholder=\"Enter your email here\"\r\n            imageSrc={emailImg}\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(event) => setEmail(event.target.value)}\r\n          />\r\n          <InputGroup\r\n            label=\"Password\"\r\n            placeholder=\"Enter your password here\"\r\n            hintText=\"Forgot Password?\"\r\n            onHintClick={handleForgotPassword}\r\n            imageSrc={passwordImg}\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(event) => setPassword(event.target.value)}\r\n          />\r\n\r\n          <CheckBox\r\n            text=\"Remember me\"\r\n            checked={remember}\r\n            onChange={() => setRemember((v) => !v)}\r\n          />\r\n\r\n          {error.non_field_errors && (\r\n            <Paragraph color=\"#FF5F5F\">{error.non_field_errors[0]}</Paragraph>\r\n          )}\r\n          {validateEmail && (\r\n            <Paragraph color=\"#FF5F5F\">Please Enter a valid Email</Paragraph>\r\n          )}\r\n          {(error.username || error.password) && (\r\n            <Paragraph color=\"#FF5F5F\">Fields cannot be empty</Paragraph>\r\n          )}\r\n\r\n          <ButtonBar>\r\n            <Button color=\"#00A652\" type=\"submit\" onSubmit={onSubmit}>\r\n              Log in\r\n            </Button>\r\n          </ButtonBar>\r\n        </form>\r\n\r\n        <Divider>Or log in with</Divider>\r\n        <ButtonBar>\r\n          <Button\r\n            // onClick={() => loginWithGoogle()}\r\n            style={{\r\n              backgroundColor: \"white\",\r\n              color: \"black\",\r\n              textColor: \"#000\",\r\n            }}\r\n          >\r\n            <Image\r\n              margin=\"8px -14px 0 -15px\"\r\n              width=\"36px\"\r\n              src={googleImg}\r\n              alt=\"Google logo\"\r\n            />\r\n            Google\r\n          </Button>\r\n\r\n          <FacebookLogin\r\n            appId=\"1083826272167616\"\r\n            callback={HandleFacbookLogin}\r\n            render={(renderProps) => (\r\n              <Button\r\n                onClick={renderProps.onClick}\r\n                style={{\r\n                  backgroundColor: \"white\",\r\n                  color: \"black\",\r\n                  textColor: \"#000\",\r\n                }}\r\n              >\r\n                <Image width=\"22px\" src={facebookImg} alt=\"Facebook logo\" />\r\n                &nbsp; Facebook\r\n              </Button>\r\n            )}\r\n          />\r\n          <AppleSignin\r\n            authOptions={{\r\n              clientId: \"com.crowdbotics.storeandsharevault.service\",\r\n              scope: \"email name\",\r\n              redirectURI: `${window.location.origin}/login`,\r\n              state: \"state\",\r\n              nonce: \"nonce\",\r\n              usePopup: true,\r\n            }} // REQUIRED\r\n            noDefaultStyle={false}\r\n            onSuccess={HandleAppleLogin}\r\n            onError={({ error }) =>\r\n              error !== \"popup_closed_by_user\" &&\r\n              alert(`Apple SignIn Error: \\n ${error}`)\r\n            }\r\n            skipScript={false}\r\n            render={(props) => (\r\n              <Button {...props} color=\"#fff\" textColor=\"#000\">\r\n                <Image\r\n                  margin=\"4px -10px 0 -15px\"\r\n                  width=\"36px\"\r\n                  src={appleImg}\r\n                  alt=\"Apple logo\"\r\n                />{\" \"}\r\n                Apple\r\n              </Button>\r\n            )}\r\n          />\r\n        </ButtonBar>\r\n\r\n        <Paragraph>\r\n          Don't have an account?{\" \"}\r\n          <CustomLink to=\"/signup\">\r\n            <Paragraph bold>Sign Up</Paragraph>\r\n          </CustomLink>\r\n        </Paragraph>\r\n        <LogoContainer>\r\n          <Logo />\r\n        </LogoContainer>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","import { setAuthError, socialLoggedIn } from \"../../slice/mainSlice\"\r\n\r\nconst SocialLogin = (response) => dispatch => {\r\n    try {\r\n        dispatch(socialLoggedIn(response))\r\n    } catch (error) {\r\n        dispatch(setAuthError(error))\r\n    }\r\n}\r\n\r\nexport default SocialLogin"],"names":["Image","styled","Button","props","width","height","color","borderRadius","border","textColor","margin","Login","useState","error","seterror","validateEmail","useLoginWithAppleMutation","loginWithApple","navigate","useNavigate","dispatch","useDispatch","email","setEmail","password","setPassword","remember","setRemember","onSubmit","e","preventDefault","postLogin","then","response","catch","console","log","data","handleForgotPassword","loggedIn","useSelector","state","reducer","auth","useEffect","padding","style","display","flexDirection","justifyContent","alignItems","label","placeholder","imageSrc","emailImg","type","value","onChange","event","target","hintText","onHintClick","passwordImg","text","checked","v","non_field_errors","username","backgroundColor","src","googleImg","alt","appId","callback","facebookdata","status","postfacebookLogin","accessToken","id","SocialLogin","user","key","token","err","alert","JSON","stringify","message","render","renderProps","onClick","facebookImg","authOptions","clientId","scope","redirectURI","window","location","origin","nonce","usePopup","noDefaultStyle","onSuccess","authorization","code","id_token","access_token","unwrap","res","onError","skipScript","appleImg","to","bold","socialLoggedIn","setAuthError"],"sourceRoot":""}