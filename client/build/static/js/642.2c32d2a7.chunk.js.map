{"version":3,"file":"static/js/642.2c32d2a7.chunk.js","mappings":"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","sources":["pages/Subscriptions/index.js"],"sourcesContent":["import React, { useState, useMemo, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Back, Container, Page, Row, Title } from \"../../components/common\";\r\nimport { Plan, Switch, SwitchButton } from \"../../components/Subscriptions\";\r\nimport LoadingSpinner from \"../../components/common/LoadingSpinner\";\r\nimport { useGetSubscriptionsAndPackagesQuery } from \"../../store/slice/api\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function Subscriptions() {\r\n  const [monthly, setMonthly] = useState(true);\r\n  const [interval, setInterval] = useState(\"month\");\r\n  const user = useSelector((state) => state.reducer.auth.user);\r\n\r\n  const {\r\n    data: subscriptionsAndPackagesApiResponse,\r\n    isLoading: isFetchingSubscriptionsAndPackages,\r\n    error: errorFetchingSubscriptionsAndPackages,\r\n  } = useGetSubscriptionsAndPackagesQuery();\r\n\r\n  const packages = useMemo(() => {\r\n    if (!subscriptionsAndPackagesApiResponse) return [];\r\n\r\n    return subscriptionsAndPackagesApiResponse.data\r\n      .filter(\r\n        (snp) =>\r\n          snp.nickname.includes(\"package:\") &&\r\n          (monthly\r\n            ? snp.recurring.interval === \"month\"\r\n            : snp.recurring.interval === \"year\")\r\n      )\r\n      .map((snp) => ({\r\n        ...snp,\r\n        nickname: snp.nickname.split(\":\")[1],\r\n        currency: snp.currency === \"usd\" ? \"$\" : \"$\",\r\n        order: snp.nickname.includes(\"BASIC\")\r\n          ? 1\r\n          : snp.nickname.includes(\"STANDARD\")\r\n          ? 2\r\n          : 3,\r\n        color: snp.nickname.includes(\"BASIC\")\r\n          ? \"#FBBC05\"\r\n          : snp.nickname.includes(\"STANDARD\")\r\n          ? \"#A7D170\"\r\n          : \"#F19ECE\",\r\n        availableFeatureCount: snp.nickname.includes(\"BASIC\")\r\n          ? 2\r\n          : snp.nickname.includes(\"STANDARD\")\r\n          ? 3\r\n          : 4,\r\n      }))\r\n      .sort((a, b) => a.order - b.order);\r\n  }, [subscriptionsAndPackagesApiResponse, interval, monthly]);\r\n\r\n  const storages = useMemo(() => {\r\n    if (!subscriptionsAndPackagesApiResponse) return [];\r\n\r\n    return subscriptionsAndPackagesApiResponse.data\r\n      .filter(\r\n        (snp) =>\r\n          snp.nickname.includes(\"storage:\") &&\r\n          (monthly\r\n            ? snp.recurring.interval === \"month\"\r\n            : snp.recurring.interval === \"year\")\r\n      )\r\n      .map((snp) => ({\r\n        ...snp,\r\n        nickname: snp.nickname.split(\":\")[1],\r\n        currency: snp.currency === \"usd\" ? \"$\" : \"$\",\r\n        order: parseInt(snp.nickname.split(\":\")[1]),\r\n      }))\r\n      .sort((a, b) => a.order - b.order);\r\n  }, [subscriptionsAndPackagesApiResponse, interval, monthly]);\r\n\r\n  const videos = useMemo(() => {\r\n    if (!subscriptionsAndPackagesApiResponse) return [];\r\n\r\n    return subscriptionsAndPackagesApiResponse.data\r\n      .filter(\r\n        (snp) =>\r\n          snp.nickname.includes(\"videos:\") &&\r\n          (monthly\r\n            ? snp.recurring.interval === \"month\"\r\n            : snp.recurring.interval === \"year\")\r\n      )\r\n      .map((snp) => ({\r\n        ...snp,\r\n        nickname: snp.nickname.split(\":\")[1],\r\n        currency: snp.currency === \"usd\" ? \"$\" : \"$\",\r\n        order: parseInt(snp.nickname.split(\":\")[1]),\r\n      }))\r\n      .sort((a, b) => a.order - b.order);\r\n  }, [subscriptionsAndPackagesApiResponse, interval, monthly]);\r\n\r\n  useEffect(() => {\r\n    if (user && user.subscription) {\r\n      user.subscription.items.find((items) => {\r\n        if (items.plan.nickname.includes(\"package\")) {\r\n          if (items.plan.interval === \"month\") {\r\n            setMonthly(true);\r\n          } else {\r\n            setMonthly(false);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }, [user]);\r\n\r\n  return (\r\n    <Page>\r\n      <Container width=\"1227px\" margin=\"69px auto\" justifyContent=\"flex-start\">\r\n        <Title fontWeight=\"700\" margin=\"46px auto\">\r\n          Subscription & Packages\r\n        </Title>\r\n        {isFetchingSubscriptionsAndPackages ? (\r\n          <LoadingSpinner />\r\n        ) : errorFetchingSubscriptionsAndPackages ? (\r\n          <></>\r\n        ) : (\r\n          <>\r\n            <Switch>\r\n              <SwitchButton\r\n                active={monthly}\r\n                onClick={() => {\r\n                  setMonthly(true);\r\n                  setInterval(\"month\");\r\n                }}\r\n              >\r\n                <p style={{ margin: \"auto\" }}>Monthly</p>\r\n              </SwitchButton>\r\n              <SwitchButton\r\n                right\r\n                active={!monthly}\r\n                onClick={() => {\r\n                  setMonthly(false);\r\n                  setInterval(\"year\");\r\n                }}\r\n              >\r\n                <p style={{ margin: \"auto\" }}>Yearly</p>\r\n              </SwitchButton>\r\n            </Switch>\r\n\r\n            <Row justifyContent=\"space-between\" width=\"1005px\">\r\n              {packages.map((plan, index) => (\r\n                <Plan\r\n                  key={index}\r\n                  plan={plan}\r\n                  videos={videos}\r\n                  storages={storages}\r\n                  interval={interval}\r\n                  monthly={monthly}\r\n                />\r\n              ))}\r\n            </Row>\r\n          </>\r\n        )}\r\n        <Back />\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"],"names":["Subscriptions","useState","monthly","setMonthly","interval","setInterval","user","useSelector","state","reducer","auth","useGetSubscriptionsAndPackagesQuery","subscriptionsAndPackagesApiResponse","data","isFetchingSubscriptionsAndPackages","isLoading","errorFetchingSubscriptionsAndPackages","error","packages","useMemo","filter","snp","nickname","includes","recurring","map","split","currency","order","color","availableFeatureCount","sort","a","b","storages","parseInt","videos","useEffect","subscription","items","find","plan","width","margin","justifyContent","fontWeight","active","onClick","style","right","index"],"sourceRoot":""}