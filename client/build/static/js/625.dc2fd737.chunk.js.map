{"version":3,"file":"static/js/625.dc2fd737.chunk.js","mappings":"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","sources":["pages/Layout/pages/MyBuddies/index.js"],"sourcesContent":["import React, { useMemo } from \"react\";\r\nimport { IoNotificationsOutline, IoSettingsOutline } from \"react-icons/io5\";\r\nimport { useSelector, useStore, useDispatch } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  CheckBox,\r\n  IconButton,\r\n  Image,\r\n  OptionsMenu,\r\n  Paragraph,\r\n  // Row,\r\n  Title,\r\n} from \"../../../../components/common\";\r\nimport {\r\n  AddBuddyModal,\r\n  Table,\r\n  TableBodyRow,\r\n  TableHeadRow,\r\n} from \"../../../../components/MyBuddies\";\r\nimport { useModal } from \"../../../../context/modal-context\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { logout } from \"../../../../store/actions/auth\";\r\nimport people from \"../../../../assets/images/people.png\";\r\nimport SignOut from \"../../../../assets/images/SignOut.png\";\r\nimport Group86 from \"../../../../assets/images/Group 86.png\";\r\nimport NotePencil from \"../../../../assets/images/NotePencil.png\";\r\nimport OptionMenuSettings from \"../../../../components/common/OptionMenuSettings\";\r\nimport AlertModal from \"../../../../components/common/AlertModal\";\r\nimport {\r\n  useAddBuddyMutation,\r\n  useDeleteBuddyMutation,\r\n  useGetBuddiesQuery,\r\n  useGetMyProfileQuery,\r\n} from \"../../../../store/slice/api\";\r\nimport LoadingSpinner from \"../../../../components/common/LoadingSpinner\";\r\n\r\nimport { MdKeyboardBackspace } from \"react-icons/md\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: ${(props) => props.justifyContent};\r\n  align-items: ${(props) => props.alignItems};\r\n  height: ${(props) => props.height};\r\n  padding: ${(props) => props.padding};\r\n  width: ${(props) => props.width};\r\n  margin: ${(props) => props.margin};\r\n  ${(props) => props.link && \"cursor:pointer;\"}\r\n`;\r\n\r\nexport default function MyBuddies() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const token = useSelector((state) => state.reducer.auth.token);\r\n  const [buddies, setbuddies] = useState([]);\r\n  const store = useStore();\r\n  const { setModal } = useModal();\r\n  const [selectedBuddies, setSelectedBuddies] = useState({});\r\n  const [checkBox, setCheckBox] = useState(false);\r\n\r\n  const {\r\n    data: myProfile,\r\n    isLoading: isProfileLoading,\r\n    isSuccess: isProfileSuccessfullyLoaded,\r\n  } = useGetMyProfileQuery();\r\n  const {\r\n    data: myBuddies,\r\n    isLoading: loadingBuddies,\r\n    isSuccess: buddiesSuccessfullyLoaded,\r\n  } = useGetBuddiesQuery();\r\n  const [addBuddy] = useAddBuddyMutation();\r\n  const [deleteBuddy] = useDeleteBuddyMutation();\r\n\r\n  const userProfile = useMemo(() => {\r\n    if (myProfile?.results) {\r\n      return myProfile.results[0];\r\n    }\r\n    return null;\r\n  }, [myProfile]);\r\n\r\n  useEffect(() => {\r\n    setbuddies(myBuddies);\r\n  }, [myBuddies]);\r\n\r\n  useEffect(() => {\r\n    const initialSelectedBuddies = {};\r\n    buddies.forEach(({ id }) => {\r\n      initialSelectedBuddies[id] = false;\r\n    });\r\n    setSelectedBuddies({});\r\n  }, [setSelectedBuddies]);\r\n\r\n  // const checkAllBuddiesSelected = () => {\r\n  //   const values = Object.values(selectedBuddies)\r\n  //   for (const value of values) {\r\n  //     if (!value) return false\r\n  //   }\r\n  //   return true\r\n  // }\r\n\r\n  const toggleAllBuddies = () => {\r\n    const allBuddies = {};\r\n    buddies.forEach(({ id }) => {\r\n      allBuddies[id] = checkBox;\r\n    });\r\n    setSelectedBuddies(allBuddies);\r\n  };\r\n\r\n  useEffect(() => {\r\n    toggleAllBuddies();\r\n  }, [checkBox]);\r\n\r\n  const toggleBuddy = (id) => {\r\n    setSelectedBuddies((currentSelectedBuddies) => {\r\n      return {\r\n        ...currentSelectedBuddies,\r\n        [id]: !currentSelectedBuddies[id],\r\n      };\r\n    });\r\n  };\r\n  const HandleDelete = (id) => {\r\n    deleteBuddy(id)\r\n      .unwrap()\r\n      .then()\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(JSON.stringify(err));\r\n      });\r\n  };\r\n\r\n  const addNewBuddy = () => {\r\n    if (userProfile?.subscription?.status === \"active\" || buddies.length < 2) {\r\n      setModal(<AddBuddyModal addBuddies={addBuddy} store={store} />);\r\n    } else {\r\n      setModal(\r\n        <AlertModal\r\n          message={\"Please Subscribe for adding more buddies ☺️\"}\r\n          buttonText={\"Subscribe\"}\r\n          onSubmit={() => {\r\n            navigate(\"/subscriptions\");\r\n          }}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row\r\n        padding=\"15px 24px\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-between\"\r\n        className=\"flex_column\"\r\n      >\r\n        <Row alignItems=\"center\">\r\n          <MdKeyboardBackspace\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => navigate(-1)}\r\n            size={25}\r\n          />\r\n          <Title fontWeight=\"650\" margin=\"8px 0px 0px 40px\">\r\n            My Buddies\r\n          </Title>\r\n        </Row>\r\n        <Row>\r\n          <OptionMenuSettings\r\n            options={[\r\n              {\r\n                Icon: people,\r\n                text: \"My Buddies\",\r\n                onClick: () => {\r\n                  navigate(\"/home/my-buddies\");\r\n                },\r\n              },\r\n              {\r\n                Icon: Group86,\r\n                text: \"My transactions\",\r\n                onClick: () => {\r\n                  navigate(\"/home/transactions\");\r\n                },\r\n              },\r\n              {\r\n                Icon: NotePencil,\r\n                text: \"Send Feedback\",\r\n                onClick: () => {\r\n                  navigate(\"/home/send/feedback\");\r\n                },\r\n              },\r\n              {\r\n                Icon: SignOut,\r\n                text: \"Logout\",\r\n                onClick: () => {\r\n                  dispatch(logout());\r\n                  navigate(\"/\");\r\n                },\r\n              },\r\n            ]}\r\n          />\r\n\r\n          <IconButton\r\n            onClick={() => {\r\n              navigate(\"/home/notifications\");\r\n            }}\r\n          >\r\n            <IoNotificationsOutline size={20} />\r\n          </IconButton>\r\n        </Row>\r\n      </Row>\r\n\r\n      {Boolean(isProfileLoading || loadingBuddies) ? (\r\n        <LoadingSpinner />\r\n      ) : (\r\n        <>\r\n          <Row\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n            width=\"100%\"\r\n            margin=\"24px 0 12px\"\r\n            className=\"mt-0\"\r\n          >\r\n            <Paragraph bold fontSize=\"24px\" color=\"#000\">\r\n              All Buddies\r\n            </Paragraph>\r\n            <Button color=\"#00A652\" onClick={addNewBuddy}>\r\n              + Add new Buddy\r\n            </Button>\r\n          </Row>\r\n          <div className=\"table_responsive\">\r\n            <Table>\r\n              <thead>\r\n                <TableHeadRow>\r\n                  <th>\r\n                    <CheckBox\r\n                      checked={checkBox}\r\n                      onChange={() => setCheckBox(!checkBox)}\r\n                    />\r\n                  </th>\r\n                  <th>Contact Name</th>\r\n                  <th>Relation</th>\r\n                  <th>Phone Number</th>\r\n                  <th>Email</th>\r\n                  <th>Member Type</th>\r\n                </TableHeadRow>\r\n              </thead>\r\n              <tbody>\r\n                {buddies?.map((item, index) => (\r\n                  <TableBodyRow key={index}>\r\n                    <td>\r\n                      <CheckBox\r\n                        checked={selectedBuddies[item.id] === true}\r\n                        onChange={() => toggleBuddy(item.id)}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <Row alignItems=\"center\">\r\n                        {item.profile_picture && (\r\n                          <Image\r\n                            width=\"36px\"\r\n                            height=\"36px\"\r\n                            borderRadius=\"50%\"\r\n                            objectFit=\"cover\"\r\n                            src={item.profile_picture}\r\n                            alt=\"Person\"\r\n                          />\r\n                        )}\r\n                        {item.buddydetail ? item.buddydetail.username : \"N/A\"}\r\n                      </Row>\r\n                    </td>\r\n                    <td>{item.relationship ?? \"N/A\"}</td>\r\n                    <td>\r\n                      {item.buddydetail ? item.buddydetail.phone_number : \"N/A\"}\r\n                    </td>\r\n                    <td>{item.email ?? \"N/A\"}</td>\r\n                    <td>\r\n                      {item.member_type === 1\r\n                        ? \"General member\"\r\n                        : \"Sub prime\" ?? \"N/A\"}\r\n                    </td>\r\n                    <td>\r\n                      <OptionsMenu\r\n                        options={[\r\n                          { text: \"Promote SubPrime\", onClick: () => {} },\r\n                          {\r\n                            text: \"Delete\",\r\n                            onClick: () => {\r\n                              HandleDelete(item.id);\r\n                            },\r\n                          },\r\n                        ]}\r\n                      />\r\n                    </td>\r\n                  </TableBodyRow>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"names":["Row","styled","props","justifyContent","alignItems","height","padding","width","margin","link","MyBuddies","navigate","useNavigate","dispatch","useDispatch","useSelector","state","reducer","auth","token","useState","buddies","setbuddies","store","useStore","setModal","useModal","selectedBuddies","setSelectedBuddies","checkBox","setCheckBox","useGetMyProfileQuery","myProfile","data","isProfileLoading","isLoading","isSuccess","useGetBuddiesQuery","myBuddies","loadingBuddies","useAddBuddyMutation","addBuddy","useDeleteBuddyMutation","deleteBuddy","userProfile","useMemo","results","useEffect","initialSelectedBuddies","forEach","id","allBuddies","toggleAllBuddies","className","style","cursor","onClick","size","fontWeight","options","Icon","people","text","Group86","NotePencil","SignOut","logout","Boolean","bold","fontSize","color","subscription","status","length","addBuddies","message","buttonText","onSubmit","checked","onChange","map","item","index","currentSelectedBuddies","profile_picture","borderRadius","objectFit","src","alt","buddydetail","username","relationship","phone_number","email","member_type","unwrap","then","catch","err","console","log","alert","JSON","stringify"],"sourceRoot":""}